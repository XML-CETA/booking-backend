syntax = "proto3";

option go_package = "booking-backend/common/proto/rating_service";

import "google/api/annotations.proto";

service RatingService {
    rpc CreateAccommodationRate(RatingAccommodationRequest) returns (RateResponse) {
      option (google.api.http) = {
        post: "/ratings/accommodation"
        body: "*"
      };
    }

    rpc UpdateAccommodationRate(RatingAccommodationRequest) returns (RateResponse) {
      option (google.api.http) = {
        put: "/ratings/accommodation"
        body: "*"
      };
    }

    rpc DeleteAccommodationRate(RateAccommodationIdRequest) returns (RateResponse) {
      option (google.api.http) = {
        delete: "/ratings/accommodation/{id}"
      };
    }

    rpc GetAllAccommodationRates(RateAccommodationIdRequest) returns (AllAccommodationRatesResponse) {
      option (google.api.http) = {
        get: "/ratings/accommodation/{id}"
      };
    }

    rpc GetAverageAccommodationRate(RateAccommodationIdRequest) returns (AverageRateAccommodationResponse) {
      option (google.api.http) = {
        get: "/ratings/accommodation/{id}/average"
      };
    }
    rpc CreateUserRating(RateUserRequest) returns (RateResponse){
      option (google.api.http)= {
        post: "/ratings/user"
        body: "*"
      };
    }
    rpc GetHostRates(HostRatesRequest) returns (HostRatesResponse){
      option (google.api.http) = {
        get: "/ratings/host/{id}"
      };
    }
    rpc UpdateUserRating(UpdateUserRatingRequest) returns (RateResponse){
      option (google.api.http) = {
        put: "/ratings/user"
        body: "*"
      };
    }
    rpc DeleteUserRating(DeleteUserRatingRequest) returns (RateResponse){
      option (google.api.http) = {
        delete:"/ratings/user/{hostId}"
      };
    }
    rpc GetAverageUserRating(HostRatesRequest) returns (AverageUserRatingResponse) {
      option (google.api.http) = {
        get:"/ratings/user/{id}/average"
      };
    }

}

message RateUserRequest{
  string ratedUser = 1;
  int32 rate = 3;
}

message UserRating{
  string ratedUser = 1;
  string ratedBy = 2;
  int32 rate = 3;
  string date = 4;
}

message RatingAccommodationRequest {
    string accommodation = 1;
    int32 rate = 2;
}

message RateResponse {
    string data = 1;
}

message HostRatesRequest{
  string id = 1;
}

message HostRatesResponse{
  repeated UserRating ratings = 1;
}

message UpdateUserRatingRequest {
  string ratedUser = 1;
  int32 rate = 3;
}

message DeleteUserRatingRequest {
  string hostId = 1;
}
  
message RateAccommodationIdRequest{
  string id = 1;
}

message AverageRateAccommodationResponse{
  float average = 1;
}

message AverageUserRatingResponse{
  float average = 1;
}

message RateAccommodationResponse{
  string user = 1;
  string date = 2;
  int32 rate= 3;
}

message AllAccommodationRatesResponse{
  repeated RateAccommodationResponse rates = 1;
}